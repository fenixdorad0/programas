package estructuras;

import javax.swing.JOptionPane;

////clase que manipula a los punteros para manipular los nodos en la memoria

public class Lista {
// declarar los punteros!!!
NodoLista Primero, ultimo, aux, nuevo, ant, post,conteliminar;

public Lista(){
   Primero = ultimo = aux = nuevo = ant = post = null;
}

public void insertarcola(int dato, Object nom,Object apell, Object n1, Object n2, Object n3, Object nf ){
   if(Primero==null){// si la lista esta vacia
       Primero = new NodoLista(dato,nom,apell,n1,n2,n3,nf);
       ultimo=Primero;
   }
   else{////ya hay mas nodos en la lista	  
	   nuevo = new NodoLista(dato,nom,apell,n1,n2,n3,nf);
       ultimo.sig = nuevo;
       ultimo = nuevo;
	   }          
}

public void insertarcabeza(int dato,Object nom,Object apell, Object n1, Object n2, Object n3, Object nf){
   if(Primero==null){// si la lista esta vacia
       Primero = new NodoLista(dato,nom,apell,n1,n2,n3,nf);
       ultimo=Primero;
   }
   else{
       nuevo = new NodoLista(dato,nom,apell,n1,n2,n3,nf,Primero);
       Primero = nuevo;
   }
}
public void buscar(int busc, String s){
	String cad = "";
	aux = Primero;
	if (s.equals("buscar")){
	if(aux == null){
		JOptionPane.showMessageDialog(null, "no hay datos en la lista");
	}
	   while (aux != null) {
		   if(aux.id == busc){
			   JOptionPane.showMessageDialog(null, "los datos que pertenecen a la identificacion "+busc+ " son:");
			   cad = cad +"identificacion "+aux.id+" \n nombre: "+ aux.nomb + " \n apellido: " +
					   aux.apelli + " \n nota1: " +
					   aux.not1+ " \n nota2: " +
					   aux.not2 + " \n nota3: " +
					   aux.not3+ " \n nota final: " +
					   aux.notfinal + "  " +
						"\n";
			  JOptionPane.showMessageDialog(null, cad);
			   break;
		   }
	       aux = aux.sig;
	       }
	   if(aux==null){
		   JOptionPane.showMessageDialog(null, "la identificacion "+busc+" no existe");
	   }
	}
	else if (s.equals("modificar")){
		aux=Primero;
		while (aux!= null){
		if (aux.id==busc){
			String desicion;
			String opciones[]={"todo","identificacion","nombre","apellido","notas","finalizar"};
			   do {
		        	desicion = (String)JOptionPane.showInputDialog(null,"señor usuario que desea modificar", "lista simple",JOptionPane.INFORMATION_MESSAGE,null,opciones, opciones[0]);
		        	switch (desicion) {
		            	case "todo":				   
		 				    aux.id = AppLista.leer_entero("Digite el nuevo numero de identificación ");
		                    aux.nomb= JOptionPane.showInputDialog("Digite el nuevo nombre de la persona ");
		                    aux.apelli=JOptionPane.showInputDialog("Digite el apellido de "+aux.nomb);
		                    notas();
		            	break;
		            	case "identificacion":
		            		aux.id = AppLista.leer_entero("Digite el nuevo numero de identificación ");
		        		break;
		            	case "nombre":
		            			aux.nomb= JOptionPane.showInputDialog("Digite el nuevo nombre de la persona ");
		            		break;
		                case "apellido":
		                	aux.apelli=JOptionPane.showInputDialog("Digite el apellido de "+aux.nomb);
		                	break;
		                case "notas":
		                	notas();
		                    break;
		                case "finalizar":
		                	JOptionPane.showMessageDialog(null,"Los cambios se han realizado exitosamente");
		                	break;
		                default :JOptionPane.showMessageDialog(null, "opcion no valida, intenta de nuevo");
		                	}
			   }while (desicion != "finalizar");
			   aux = aux.sig;
		}
		}
		
	}
	else if (s.equals("eliminar")){
		if (aux != null)
        {               
            if (aux == ultimo && aux.id == busc) //eliminar si es el primer nodo y la lista solo tiene un dato//
            {
                JOptionPane.showMessageDialog(null,"los datos que pertenecen a la identificacion " + busc + "  a eliminar son: \n" + "identificacion: " + aux.id + " \t nombre: " + aux.nomb + " \t apellido: " + aux.apelli + " \t nota1: " + aux.not1 + " \t nota2: " + aux.not2 + " \t nota3: " + aux.not3 + " \t nota final: " + aux.notfinal);
                aux = ultimo = null; //nodo_primero pasa a ser el ultimo y ser igual a null//
            }
            else if (aux.id == busc)  // si el nodo a eliminar es el primero sin la lista estar vacia//
            {
                Primero = aux.sig; //apuntar inicio al siguiente nodo//
                JOptionPane.showMessageDialog(null,"los datos que pertenecen a la identificacion " + busc + "  a eliminar son: \n" + "identificacion: " + aux.id + " \t nombre: " + aux.nomb + " \t apellido: " + aux.apelli + " \t nota1: " + aux.not1 + " \t nota2: " + aux.not2 + " \t nota3: " + aux.not3 + " \t nota final: " + aux.notfinal);
            }
            else
            {
                //anterior, temporal; // se crean dos punteros//
                ant = Primero; // anterior igual al nodo_primero//
                post = Primero.sig; // temporal igual al siguiente nodo del nodo actual o nodo_primero//
                while (post != null && post.id != busc) // se realiza un ciclo mientras que temporal no sea null//                                                                   
                {                                                          //  y el nodo no sea igual a la identificacion a eliminar//    
                    ant = ant.sig; // los apuntadores cambian conforme avanza el ciclo//
                    post = post.sig;
                }
                if (post != null)  // es decir que encontro el nodo a eliminar//
                {
                    ant.sig = post.sig;
                    JOptionPane.showMessageDialog(null,"los datos que pertenecen a la identificacion " + busc + "  a eliminar son: \n" + "identificacion: " + aux.id + " \t nombre: " + aux.nomb + " \t apellido: " + aux.apelli + " \t nota1: " + aux.not1 + " \t nota2: " + aux.not2 + " \t nota3: " + aux.not3 + " \t nota final: " + aux.notfinal);
                    if (post == ultimo)
                    {
                        ultimo = ant;

                    }
                }
            }
        }
        else
        {
        	JOptionPane.showMessageDialog(null,"no hay datos en la lista");
        }                               
    }
		
		
			
	   
	

	else if (s.equals("insertar")){
		opcion3(cad);
	   }


}

public void opcionModificar() {
	//modificar
		   
}

public void opcion3(String cad) {
	String opcionesInsertar[]={"Despues de","Antes de"},desicionInsertar;
	desicionInsertar = (String)JOptionPane.showInputDialog(null,"señor usuario que desea hacer", "lista simple",JOptionPane.INFORMATION_MESSAGE,null,opcionesInsertar, opcionesInsertar[0]);
	switch (desicionInsertar) {
	case "Antes de":
		if (aux==Primero && aux.sig==null){//si antes de 1
			int identificacion = AppLista.leer_entero("Digite el numero de identificacion");
			String nombre= JOptionPane.showInputDialog("Digite el nombre de la persona");
			while (nombre.isEmpty()){
				nombre =JOptionPane.showInputDialog("Digite el nombre de la persona");
			}		
			String apellido=JOptionPane.showInputDialog("Digite el apellido de "+nombre);
			while (apellido.isEmpty()){
				apellido=JOptionPane.showInputDialog("Digite el apellido de "+nombre);
			}
			double nota1=AppLista.leer_nota("Digite la nota 1 de "+nombre+" "+apellido);
			double nota2=AppLista.leer_nota("Digite la nota 2 de "+nombre+" "+apellido);
			double nota3=AppLista.leer_nota("Digite la nota 3 de "+nombre+" "+apellido);                       
			double notadefinitiva=(nota1*0.3)+(nota2*0.3)+(nota3*0.4);
			insertarcabeza(identificacion,nombre,apellido,nota1,nota2,nota3,notadefinitiva);
		}
		break;
	case "Despues de":
		if (aux.sig==null){//despues del ultimo
			int identificacion = AppLista.leer_entero("Digite el numero de identificacion");
			String nombre= JOptionPane.showInputDialog("Digite el nombre de la persona");
			while (nombre.isEmpty()){
				nombre =JOptionPane.showInputDialog("Digite el nombre de la persona");
			}		
			String apellido=JOptionPane.showInputDialog("Digite el apellido de "+nombre);
			while (apellido.isEmpty()){
				apellido=JOptionPane.showInputDialog("Digite el apellido de "+nombre);
			}
			double nota1=AppLista.leer_nota("Digite la nota 1 de "+nombre+" "+apellido);
			double nota2=AppLista.leer_nota("Digite la nota 2 de "+nombre+" "+apellido);
			double nota3=AppLista.leer_nota("Digite la nota 3 de "+nombre+" "+apellido);                       
			double notadefinitiva=(nota1*0.3)+(nota2*0.3)+(nota3*0.4);
	        insertarcola(identificacion,nombre,apellido,nota1,nota2,nota3,notadefinitiva);
		}
		else{
			JOptionPane.showMessageDialog( null, cad );				   
		    nuevo.id = AppLista.leer_entero("Digite el nuevo numero de identificación ");
		    nuevo.nomb= JOptionPane.showInputDialog("Digite el nuevo nombre de la persona ");
		    nuevo.apelli=JOptionPane.showInputDialog("Digite el apellido de "+aux.nomb);
	        double nota1=AppLista.leer_nota("Digite la nueva nota 1 de "+nuevo.nomb+" "+nuevo.apelli);
	    	double nota2=AppLista.leer_nota("Digite la nueva nota 2 de "+nuevo.nomb+" "+nuevo.apelli);
	    	double nota3=AppLista.leer_nota("Digite la nueva nota 3 de "+nuevo.nomb+" "+nuevo.apelli);
	    	double notadefinitiva=(nota1*0.3)+(nota2*0.3)+(nota3*0.4);
	    	nuevo.not1=nota1;
	    	nuevo.not2=nota2;
	    	nuevo.not3=nota3;
	    	nuevo.notfinal=notadefinitiva;
			nuevo.sig=aux.sig;
			aux.sig=nuevo;
		}
		break;
	}
}
//Algo para despues PDD ignorar
public Integer verificarId(int identificacion){
	int retorna;
	retorna=2;
		while (identificacion!= aux.id){
		if (identificacion==aux.id){
			JOptionPane.showMessageDialog(null, "la identificacion ya existe porfavor vuelva a escribir");
			retorna=0;
		}
		else{
			retorna=1;
		}
		aux.id=aux.sig.id;;
	}
		return retorna;
	
		
}
public void notas() {
	double nota1=AppLista.leer_nota("Digite la nueva nota 1 de "+aux.nomb+" "+aux.apelli);
	double nota2=AppLista.leer_nota("Digite la nueva nota 2 de "+aux.nomb+" "+aux.apelli);
	double nota3=AppLista.leer_nota("Digite la nueva nota 3 de "+aux.nomb+" "+aux.apelli);
	double notadefinitiva=(nota1*0.3)+(nota2*0.3)+(nota3*0.4);
	aux.not1=nota1;
	aux.not2=nota2;
	aux.not3=nota3;
	aux.notfinal=notadefinitiva;
}
public void despliegaLista(int i){
	String cad = "";
	aux = Primero;
	
	if(aux == null){
		JOptionPane.showMessageDialog(null, "no hay datos en la lista");
	}
	while(aux!=null){
		   cad = cad +"ID "+aux.id+" | nombre: "+ aux.nomb +
				   aux.apelli + "notas |" +
				   aux.not1+ "| " +
				   aux.not2 + "| " +
				   aux.not3+ " | nota final: " +
				   aux.notfinal + "  |" +
					"\n";	 
			   aux = aux.sig;   		        
		}
	JOptionPane.showMessageDialog(null, cad);
	}
}
//Existe el error al insertar en la cola para corregirlo toca contar la cantidad de objetos eliminados y agregarlo ala inversa pdd solo yo me entiendo :V


